/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/ccfw-frontend.js":
/*!*********************************!*\
  !*** ./src/js/ccfw-frontend.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ccfw-gtm */ \"./src/js/ccfw-gtm.js\");\n\n\n(function ($) {\n  'use strict';\n  /**\n   *  Define handlers for when the html/DOM is ready.\n   * TODO: Target data attributes rather than CSS classes\n   * */\n\n  $(function ($) {\n    // This is used so much make sure all modules use it to save calls to DOM\n    var cacheMainElements = {\n      init: function init() {\n        this.$el = $('#ccfw-page-banner');\n        this.$body = $('body');\n        this.$html = $('html');\n      }\n    };\n    /**\n     *  Helper functions for shared tasks\n     * */\n\n    var utilities = {\n      init: function init() {\n        this.cacheDom();\n        this.bindEvents();\n      },\n      cacheDom: function cacheDom() {\n        this.$el = cacheMainElements.$el;\n        this.$settingsModal = this.$el.find('#cookie-popup');\n        this.$body = cacheMainElements.$body;\n        this.$html = cacheMainElements.$html;\n        this.$cookieSettingsButton = this.$body.find('#js-ccfw-settings-button');\n      },\n      bindEvents: function bindEvents() {\n        this.$cookieSettingsButton.on('click', this.showBanner.bind(this));\n      },\n      showBanner: function showBanner() {\n        this.$el.show();\n        this.$cookieSettingsButton.hide();\n        this.toggleAriaHidden(this.$el, 'hide');\n      },\n      hideBanner: function hideBanner() {\n        this.$el.hide();\n        this.toggleAriaHidden(this.$el, 'show');\n        this.$cookieSettingsButton.show();\n      },\n      hideSettingsModal: function hideSettingsModal() {\n        this.$settingsModal.hide();\n        this.$body.removeClass('ccfw-modal-open');\n        this.$el.removeClass('ccfw-cookie-banner-open');\n        this.$html.removeClass('ccfw-cookie-banner-open');\n        this.$body.removeClass('ccfw-cookie-banner-open');\n      },\n      showSettingsModal: function showSettingsModal() {\n        this.$settingsModal.show();\n        this.$body.addClass('ccfw-modal-open');\n        this.$el.addClass('ccfw-cookie-banner-open');\n        this.$html.addClass('ccfw-cookie-banner-open');\n        this.$body.addClass('ccfw-cookie-banner-open');\n        settingsModal.trapSettingsFocus();\n        this.$el.scrollTop(0); // get allowed\n\n        var allowList = _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.storage.allowed.get() || [];\n        $('.' + _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.selector.toggles).each(function (key, element) {\n          var allowed = $(element).data('allowlist');\n\n          if (allowList.indexOf(allowed) !== -1) {\n            $(element).attr('aria-checked', true);\n            $('#ccfw-' + allowed + '-toggle-on').removeAttr('aria-hidden').show();\n            $('#ccfw-' + allowed + '-toggle-off').attr('aria-hidden', 'true').hide();\n          } else {\n            $(element).attr('aria-checked', false);\n            $('#ccfw-' + allowed + '-toggle-off').removeAttr('aria-hidden').show();\n            $('#ccfw-' + allowed + '-toggle-on').attr('aria-hidden', 'true').hide();\n          }\n        });\n      },\n      toggleAriaHidden: function toggleAriaHidden(elem, state) {\n        var siblings = [];\n        var sibling = elem.parent().children();\n\n        while (sibling) {\n          if (sibling !== elem) {\n            siblings.push(sibling);\n          }\n\n          sibling = sibling.nextSibling;\n        }\n\n        if (state === 'hide') {\n          siblings.forEach(function (sibling) {\n            sibling.attr('aria-hidden', 'true');\n            elem.removeAttr('aria-hidden');\n          });\n        } else {\n          siblings.forEach(function (sibling) {\n            sibling.removeAttr('aria-hidden');\n          });\n        }\n      }\n    };\n    /**\n     *  Banner management and control\n     * */\n\n    var banner = {\n      init: function init() {\n        this.cacheDom();\n        this.bindEvents();\n        this.bannerDisplay();\n      },\n      cacheDom: function cacheDom() {\n        this.$el = cacheMainElements.$el;\n        this.$buttonAccept = this.$el.find('#cookie-accept');\n        this.$buttonDecline = this.$el.find('#cookie-decline');\n        this.$buttonInfo = this.$el.find('#cookie-more-info');\n      },\n      bindEvents: function bindEvents() {\n        this.$buttonAccept.on('click', this.acceptAllButton.bind(this));\n        this.$buttonDecline.on('click', this.declineAllButton.bind(this));\n        this.$buttonInfo.on('click', this.chooseCookieSettingsButton.bind(this));\n      },\n      bannerDisplay: function bannerDisplay() {\n        if (!_ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.storage.bannerHidden.get()) {\n          utilities.showBanner();\n          this.trapBannerFocus();\n        } else {\n          utilities.hideBanner();\n        }\n      },\n      trapBannerFocus: function trapBannerFocus() {\n        var buttons = $('.ccfw-banner__buttons');\n        var focusable = $('#cookie-accept, #cookie-decline, #cookie-more-info');\n        var first = focusable[0];\n        var last = focusable[focusable.length - 1];\n        buttons.find('button').eq(0).focus();\n        buttons.on('keydown', function (e) {\n          if (e.key !== 'Tab') {\n            return;\n          }\n\n          if (e.shiftKey)\n            /* shift + tab */\n            {\n              if (document.activeElement === first) {\n                last.focus();\n                e.preventDefault();\n              }\n            } else\n            /* tab */\n            {\n              if (document.activeElement === last) {\n                first.focus();\n                e.preventDefault();\n              }\n            }\n        });\n      },\n      acceptAllButton: function acceptAllButton() {\n        _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.listItem.set(_ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.toggleAll(false));\n        _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.storage.time.set();\n        _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.storage.bannerHidden.set(true);\n        utilities.hideBanner();\n      },\n      declineAllButton: function declineAllButton() {\n        _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.listItem.set(_ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.toggleAll(true));\n        _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.storage.bannerHidden.set(true);\n        utilities.hideBanner();\n      },\n      chooseCookieSettingsButton: function chooseCookieSettingsButton() {\n        utilities.showSettingsModal();\n      }\n    };\n    var settingsModal = {\n      init: function init() {\n        this.cacheDom();\n        this.bindEvents();\n      },\n      cacheDom: function cacheDom() {\n        this.$el = cacheMainElements.$el;\n        this.$settingsModal = this.$el.find('#cookie-popup');\n        this.$buttonAccept = this.$settingsModal.find('#cookie-accept');\n        this.$buttonDecline = this.$settingsModal.find('#cookie-decline');\n        this.$buttonInfo = this.$settingsModal.find('#cookie-more-info');\n        this.$buttonSavePreferences = this.$settingsModal.find('#cookie-save-preferences');\n        this.$buttonModalClose = this.$settingsModal.find('#ccfw-modal-close');\n        this.$body = cacheMainElements.$body;\n      },\n      bindEvents: function bindEvents() {\n        this.$buttonModalClose.on('click', this.modalDisplay.bind(this));\n        this.$buttonInfo.on('click', this.trapSettingsFocus.bind(this));\n        this.$buttonSavePreferences.on('click', this.saveCookiePreferences.bind(this));\n      },\n      modalDisplay: function modalDisplay() {\n        utilities.hideSettingsModal();\n      },\n      trapSettingsFocus: function trapSettingsFocus() {\n        this.$settingsModal.focus();\n        var focusable = $('#cookie-popup a[href], #cookie-popup details, #cookie-popup button, #cookie-popup input[type=\"checkbox\"]');\n        var first = focusable[0];\n        var last = focusable[focusable.length - 1];\n        this.$el.on('keydown', function (e) {\n          // Close banner if user presses escape key\n          if (e.key === 'Escape') {\n            utilities.hideSettingsModal();\n          }\n\n          if (e.key !== 'Tab') {\n            return;\n          }\n\n          if (e.shiftKey)\n            /* shift + tab */\n            {\n              if (document.activeElement === first) {\n                last.focus();\n                e.preventDefault();\n              }\n            } else\n            /* tab */\n            {\n              if (document.activeElement === last) {\n                first.focus();\n                e.preventDefault();\n              }\n            }\n        });\n      },\n      saveCookiePreferences: function saveCookiePreferences() {\n        _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.storage.bannerHidden.set('true');\n        _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.storage.time.set();\n        utilities.hideBanner();\n        utilities.hideSettingsModal();\n      }\n    };\n    cacheMainElements.init();\n    utilities.init();\n    banner.init();\n    settingsModal.init();\n    _ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.manageAll(_ccfw_gtm__WEBPACK_IMPORTED_MODULE_0__.CCFW.storage.allowed.get(), 'init', true);\n  });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/ccfw-frontend.js\n");

/***/ }),

/***/ "./src/js/ccfw-gtm.js":
/*!****************************!*\
  !*** ./src/js/ccfw-gtm.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CCFW\": () => (/* binding */ CCFW),\n/* harmony export */   \"ccfwGTM\": () => (/* binding */ ccfwGTM),\n/* harmony export */   \"togglesChange\": () => (/* binding */ togglesChange)\n/* harmony export */ });\n/**\n * A dataLayer management script for GTM\n *\n * First step; define some settings\n */\nvar CCFW = {\n  gtm: ('; ' + document.cookie).split('; ccfw_gtm_id=').pop().split(';').shift(),\n  gtmID: document.getElementById('ccfw-page-banner').getAttribute('data-gtm-id'),\n  canRun: function canRun(id) {\n    return id.startsWith('GTM') || false;\n  },\n  allowedIds: [],\n  selector: {\n    all: {\n      accept: 'cookie-accept',\n      decline: 'cookie-decline'\n    },\n    moreInfo: 'cookie-more-info',\n    settings: 'js-ccfw-settings-button',\n    toggles: 'ccfw-banner__toggle-slider'\n  },\n  storage: {\n    time: {\n      get: function get() {\n        return JSON.parse(window.localStorage.getItem('ccfw-time'));\n      },\n      set: function set() {\n        return window.localStorage.setItem('ccfw-time', JSON.stringify(new Date(new Date().setFullYear(new Date().getFullYear() + 1)).getTime()));\n      }\n    },\n    allowed: {\n      get: function get() {\n        return JSON.parse(window.localStorage.getItem('ccfw-gtm-allowed'));\n      },\n      set: function set(value) {\n        return window.localStorage.setItem('ccfw-gtm-allowed', JSON.stringify(value));\n      }\n    },\n    bannerHidden: {\n      get: function get() {\n        return JSON.parse(window.localStorage.getItem('ccfw-banner-hidden'));\n      },\n      set: function set(value) {\n        return window.localStorage.setItem('ccfw-banner-hidden', JSON.stringify(value));\n      }\n    },\n    clear: function clear(key) {\n      return window.localStorage.removeItem(key);\n    }\n  },\n  listItem: {\n    set: function set(value) {\n      dataLayer[0]['gtm.allowlist'] = value;\n      /*console.log(dataLayer);*/\n\n      CCFW.storage.allowed.set(value);\n    },\n    clear: function clear(key, value) {\n      dataLayer[0][key].forEach(function (element, index, array) {\n        if (element === value) {\n          array.splice(index, 1);\n        }\n      });\n    }\n  },\n\n  /**\n   * Wrap the dataLayer.push function\n   * @param event\n   * @param object\n   * @private\n   */\n  trackEvent: function trackEvent(event, object) {\n    if (!object) {\n      dataLayer.push({\n        'event': event\n      });\n      return;\n    }\n\n    dataLayer.push(jQuery.extend({}, {\n      'event': event\n    }, object));\n  },\n\n  /**\n   * Determine exactly what element was clicked and return its jQuery equivalent\n   * @param event\n   * @returns {jQuery|HTMLElement}\n   * @private\n   */\n  jqTarget: function jqTarget(event) {\n    return $(event.target);\n  },\n\n  /**\n   * Runs on load\n   */\n  clearStorage: function clearStorage() {\n    var stored = CCFW.storage.time.get(); // always a year from storage\n\n    var now = new Date().getTime();\n\n    if (now > stored) {\n      // a year has past\n      CCFW.storage.clear('ccfw-gtm-allowed');\n      CCFW.storage.clear('ccfw-banner-hidden');\n      CCFW.storage.clear('ccfw-time');\n    }\n  },\n\n  /**\n   * @param remove acknowledges that we are removing all allowed ids\n   */\n  toggleAll: function toggleAll(remove) {\n    var $ = jQuery;\n    var allowList = CCFW.storage.allowed.get() || [];\n\n    if (remove) {\n      allowList = [];\n    }\n\n    $('.' + CCFW.selector.toggles).each(function (key, element) {\n      var allowed = $(element).data('allowlist');\n\n      if (remove) {\n        $(element).attr('aria-checked', false);\n        $('#ccfw-' + allowed + '-toggle-off').removeAttr('aria-hidden').show();\n        $('#ccfw-' + allowed + '-toggle-on').attr('aria-hidden', 'true').hide();\n      } else {\n        if (allowList.indexOf(allowed) === -1) {\n          allowList.push(allowed);\n        }\n\n        $(element).attr('aria-checked', true);\n        $('#ccfw-' + allowed + '-toggle-on').removeAttr('aria-hidden').show();\n        $('#ccfw-' + allowed + '-toggle-off').attr('aria-hidden', 'true').hide();\n      }\n    });\n    return allowList;\n  },\n  manageAll: function manageAll(allowList, allowed, pressed) {\n    if (!allowList) {\n      return;\n    }\n\n    var $ = jQuery;\n    var totalAllowed = $('.' + CCFW.selector.toggles).length - 1;\n\n    if (allowed !== 'all') {\n      if (pressed) {\n        allowList = allowList.filter(function (item) {\n          return item !== 'all';\n        });\n        $('#ccfw-all-toggle-off').removeAttr('aria-hidden').show();\n        $('#ccfw-all-toggle-on').attr('aria-hidden', 'true').hide();\n\n        if (allowList.length === 0) {\n          $('button[data-allowlist=\"all\"]').attr('aria-checked', false);\n        }\n      }\n\n      if (allowList.length > 0) {\n        $('button[data-allowlist=\"all\"]').attr('aria-checked', true);\n      }\n\n      if (totalAllowed === allowList.length) {\n        if (allowList.indexOf('all') === -1) {\n          allowList.push('all');\n        }\n\n        $('#ccfw-all-toggle-on').removeAttr('aria-hidden').show();\n        $('#ccfw-all-toggle-off').attr('aria-hidden', 'true').hide();\n        $('button[data-allowlist=\"all\"]').attr('aria-checked', true);\n      }\n    }\n\n    return allowList;\n  }\n};\n\nvar ccfwGTM = function ccfwGTM() {\n  if (CCFW.canRun(CCFW.gtmID)) {\n    window.dataLayer = []; // INIT\n    // use existing list if present\n    // default to empty array if not\n\n    var allowedList = CCFW.storage.allowed.get() || []; // default to empty array\n\n    var ccfwAlwaysNeeded = ['v', 'e', 'jsm']; // custom events and dataLayer access\n\n    var ccfwTriggers = [];\n    var ccfwVariables = [];\n\n    if (allowedList.indexOf('ua') !== -1) {\n      ccfwTriggers = ccfwTriggers.concat('cl', 'sdl', 'evl', 'jel', 'tl');\n      ccfwVariables = ['c', 'ctv', 'd', 'vis', 'gas', 'f', 'j', 'r', 'u'];\n    }\n\n    allowedList = allowedList.concat(ccfwAlwaysNeeded, ccfwTriggers, ccfwVariables);\n    window.dataLayer = [{\n      'gtm.allowlist': allowedList\n    }]; // Drop GTM code\n\n    (function (w, d, s, l, i) {\n      w[l] = w[l] || [];\n      w[l].push({\n        'gtm.start': new Date().getTime(),\n        event: 'gtm.js'\n      });\n      var f = d.getElementsByTagName(s)[0],\n          j = d.createElement(s),\n          dl = l !== 'dataLayer' ? '&l=' + l : '';\n      j.async = true;\n      j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n      f.parentNode.insertBefore(j, f);\n    })(window, document, 'script', 'dataLayer', CCFW.gtmID);\n\n    return true;\n  } else {\n    console.warn('CCFW GTM:', 'The GTM ID wasn\\'t assigned or, does not exist.');\n    return false;\n  }\n};\n\nvar togglesChange = function togglesChange(e) {\n  e.preventDefault();\n  var toggle = jQuery(this);\n  var allowed = toggle.data('allowlist');\n  var allowList = CCFW.storage.allowed.get() || [];\n  var pressed = toggle.attr('aria-checked') === 'true';\n  toggle.attr('aria-checked', !pressed);\n\n  if (allowed === 'all') {\n    allowList = CCFW.toggleAll(pressed);\n  }\n\n  if (pressed) {\n    allowList = allowList.filter(function (item) {\n      return item !== allowed;\n    });\n    jQuery('#ccfw-' + allowed + '-toggle-off').removeAttr('aria-hidden').show();\n    jQuery('#ccfw-' + allowed + '-toggle-on').attr('aria-hidden', 'true').hide();\n  } else {\n    if (allowList.indexOf(allowed) === -1) {\n      allowList.push(allowed);\n    }\n\n    jQuery('#ccfw-' + allowed + '-toggle-on').removeAttr('aria-hidden').show();\n    jQuery('#ccfw-' + allowed + '-toggle-off').attr('aria-hidden', 'true').hide();\n  }\n\n  allowList = CCFW.manageAll(allowList, allowed, pressed);\n  CCFW.listItem.set(allowList);\n  return false;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/ccfw-gtm.js\n");

/***/ }),

/***/ "./src/scss/ccfw-frontend.scss":
/*!*************************************!*\
  !*** ./src/scss/ccfw-frontend.scss ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb29raWUtY29tcGxpYW5jZS1mb3Itd29yZHByZXNzLy4vc3JjL3Njc3MvY2Nmdy1mcm9udGVuZC5zY3NzPzI1ZWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBIiwiZmlsZSI6Ii4vc3JjL3Njc3MvY2Nmdy1mcm9udGVuZC5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scss/ccfw-frontend.scss\n");

/***/ }),

/***/ "./src/scss/ccfw-admin-main.scss":
/*!***************************************!*\
  !*** ./src/scss/ccfw-admin-main.scss ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb29raWUtY29tcGxpYW5jZS1mb3Itd29yZHByZXNzLy4vc3JjL3Njc3MvY2Nmdy1hZG1pbi1tYWluLnNjc3M/MjNkOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEiLCJmaWxlIjoiLi9zcmMvc2Nzcy9jY2Z3LWFkbWluLW1haW4uc2Nzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scss/ccfw-admin-main.scss\n");

/***/ }),

/***/ "./src/scss/ccfw-frontend-legacy.scss":
/*!********************************************!*\
  !*** ./src/scss/ccfw-frontend-legacy.scss ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb29raWUtY29tcGxpYW5jZS1mb3Itd29yZHByZXNzLy4vc3JjL3Njc3MvY2Nmdy1mcm9udGVuZC1sZWdhY3kuc2Nzcz9lYTNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSIsImZpbGUiOiIuL3NyYy9zY3NzL2NjZnctZnJvbnRlbmQtbGVnYWN5LnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scss/ccfw-frontend-legacy.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					result = fn();
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/ccfw-frontend": 0,
/******/ 			"css/ccfw-frontend-legacy": 0,
/******/ 			"css/ccfw-admin-main": 0,
/******/ 			"css/ccfw-frontend": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) var result = runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkcookie_compliance_for_wordpress"] = self["webpackChunkcookie_compliance_for_wordpress"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/ccfw-frontend-legacy","css/ccfw-admin-main","css/ccfw-frontend"], () => (__webpack_require__("./src/js/ccfw-frontend.js")))
/******/ 	__webpack_require__.O(undefined, ["css/ccfw-frontend-legacy","css/ccfw-admin-main","css/ccfw-frontend"], () => (__webpack_require__("./src/scss/ccfw-frontend.scss")))
/******/ 	__webpack_require__.O(undefined, ["css/ccfw-frontend-legacy","css/ccfw-admin-main","css/ccfw-frontend"], () => (__webpack_require__("./src/scss/ccfw-admin-main.scss")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/ccfw-frontend-legacy","css/ccfw-admin-main","css/ccfw-frontend"], () => (__webpack_require__("./src/scss/ccfw-frontend-legacy.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;